cmake_minimum_required(VERSION 3.11.1)
project(simulator)

set(CMAKE_CXX_FLAGS "-Wall -Wextra -Wno-sign-compare")
set(CMAKE_CXX_FLAGS_DEBUG "-g")
set(CMAKE_CXX_FLAGS_RELEASE "-O3")

# Add the cmake folder to the module search path
list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}/cmake")

# Something to help out Google Test
set(gtest_force_shared_crt ON CACHE BOOL "" FORCE)

# Set configs args from CMake
set(BUILD_PROJECT "all" CACHE STRING "Set the name of the project to build")
set(BOOST_ROOT "" CACHE PATH "Path to Boost libraries")
set(NUM_PLAYERS "2" CACHE STRING "Number of players in the game")

# Always enable colors, since Ninja strips them
if ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
  add_compile_options(-fdiagnostics-color=always)
elseif ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
  add_compile_options(-fcolor-diagnostics)
endif ()

# Include Header Export module
include(GenerateExportHeader)

# Set C++ standard to C++14
set(CMAKE_CXX_STANDARD 14)

# Include ClangFormat
if((NOT BUILD_PROJECT STREQUAL "no_tests") AND (NOT BUILD_PROJECT STREQUAL "player_code"))
	include(cmake/clang-format.cmake)
endif()

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)

if(BUILD_PROJECT STREQUAL "physics")
	add_subdirectory(src/physics)
elseif(BUILD_PROJECT STREQUAL "constants")
	add_subdirectory(src/constants)
elseif(BUILD_PROJECT STREQUAL "state")
	add_subdirectory(src/state)
elseif(BUILD_PROJECT STREQUAL "logger")
	add_subdirectory(src/logger)
elseif(BUILD_PROJECT STREQUAL "llvm_pass")
	add_subdirectory(src/llvm_pass)
elseif(BUILD_PROJECT STREQUAL "drivers")
	add_subdirectory(src/drivers)
elseif(BUILD_PROJECT STREQUAL "player_wrapper")
	add_subdirectory(src/player_wrapper)
elseif(BUILD_PROJECT STREQUAL "player_code")
	add_subdirectory(src/player_code)
elseif(BUILD_PROJECT STREQUAL "game")
	add_subdirectory(src/game)
elseif(BUILD_PROJECT STREQUAL "test")
	add_subdirectory(ext/googletest)
	add_subdirectory(test)
elseif(BUILD_PROJECT STREQUAL "main")
	add_subdirectory(src/main)
elseif(BUILD_PROJECT STREQUAL "no_tests")
	add_subdirectory(src/physics)
	add_subdirectory(src/constants)
	add_subdirectory(src/simulator_constants)
	add_subdirectory(src/state)
	add_subdirectory(src/logger)
	add_subdirectory(src/llvm_pass)
	add_subdirectory(src/drivers)
	add_subdirectory(src/player_wrapper)
	add_subdirectory(src/player_code)
	add_subdirectory(src/game)
	add_subdirectory(src/main)
	add_subdirectory(src/players)
else()
	add_subdirectory(src/physics)
	add_subdirectory(src/constants)
	add_subdirectory(src/simulator_constants)
	add_subdirectory(src/state)
	add_subdirectory(src/logger)
	add_subdirectory(src/llvm_pass)
	add_subdirectory(src/drivers)
	add_subdirectory(ext/googletest)
	add_subdirectory(src/player_wrapper)
	add_subdirectory(src/player_code)
	add_subdirectory(src/game)
	add_subdirectory(src/main)
	add_subdirectory(src/players)
	add_subdirectory(test)
endif()
